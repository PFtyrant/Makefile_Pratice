# operator =  ,Recursively Expanded Variable
# 단점은 
# CFLAGS = $(CFLAGS) -O 같은 자기 자신을 정의한다면, 무한 루프에 빠지게 되므로
# 에러를 발생시킨다, 이럴 경우에는 단순 전개 변수만 사용될 수 있다.
nature1 = $(nature3)
nature2 = $(nature1) wind fire
nature3 = earth


# operator :=  , Simply Expanded Variable
sauce1:=gravy
sauce2:=$(sauce1) tabasco # sauce1 은 재귀적 전개 변수와 다르게 당시에 assign 된 값을 가지게 된다.

# operator ?= Conditional Variable Assignment Operator
# 변수가 정의 되었는지 확인하여 변수 선언
# 만약 정의가 되어 있다면 정의 하지 않음.
# 빈 연산자로 정의하여도, 정의가 되어있다고 간주 하기 때문에 사용에 주의가 요함.
food := hamburger
drink = 

# operator += 
# test command : make -f Makefile.operator print4
# output : aaa ab ac ad
# += operator로 대입 할 경우, 변수 사시에 스페이스바 하나의 공간이 존재하게 된다.
# 만약 존재하지 않는 변수에 += 로 대입 할 경우, =(재귀적 전개 변수) operator와 같은 효과로 대입 된다. 
test=aaa
test+=ab
test+=ac
test+=ad

print1:
	@echo nature1:$(nature1) nature2:$(nature2)

print2:
	@echo sauce1:$(sauce1) sauce2: $(sauce2)

print3:
	@echo $(food), $(drink)

print4:
	@echo $(test)

nature3 = sea
sauce1:=teriyaki

drink ?= cola
drink ?= cider